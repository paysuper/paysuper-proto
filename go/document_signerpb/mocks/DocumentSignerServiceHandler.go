// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	context "context"

	document_signerpb "github.com/paysuper/paysuper-proto/go/document_signerpb"
	mock "github.com/stretchr/testify/mock"
)

// DocumentSignerServiceHandler is an autogenerated mock type for the DocumentSignerServiceHandler type
type DocumentSignerServiceHandler struct {
	mock.Mock
}

// CreateSignature provides a mock function with given fields: _a0, _a1, _a2
func (_m *DocumentSignerServiceHandler) CreateSignature(_a0 context.Context, _a1 *document_signerpb.CreateSignatureRequest, _a2 *document_signerpb.CreateSignatureResponse) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *document_signerpb.CreateSignatureRequest, *document_signerpb.CreateSignatureResponse) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetSignatureUrl provides a mock function with given fields: _a0, _a1, _a2
func (_m *DocumentSignerServiceHandler) GetSignatureUrl(_a0 context.Context, _a1 *document_signerpb.GetSignatureUrlRequest, _a2 *document_signerpb.GetSignatureUrlResponse) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *document_signerpb.GetSignatureUrlRequest, *document_signerpb.GetSignatureUrlResponse) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
