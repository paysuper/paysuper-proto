// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: signer.proto

package document_signerpb

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ResponseErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: json:"code"
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	//@inject_tag: json:"message"
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	//@inject_tag: json:"details,omitempty"
	Details string `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *ResponseErrorMessage) Reset() {
	*x = ResponseErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseErrorMessage) ProtoMessage() {}

func (x *ResponseErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseErrorMessage.ProtoReflect.Descriptor instead.
func (*ResponseErrorMessage) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{0}
}

func (x *ResponseErrorMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ResponseErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ResponseErrorMessage) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

type CreateSignatureRequestSigner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email    string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pin      string `protobuf:"bytes,3,opt,name=pin,proto3" json:"pin,omitempty"`
	Group    string `protobuf:"bytes,4,opt,name=group,proto3" json:"group,omitempty"`
	RoleName string `protobuf:"bytes,5,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *CreateSignatureRequestSigner) Reset() {
	*x = CreateSignatureRequestSigner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureRequestSigner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureRequestSigner) ProtoMessage() {}

func (x *CreateSignatureRequestSigner) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureRequestSigner.ProtoReflect.Descriptor instead.
func (*CreateSignatureRequestSigner) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSignatureRequestSigner) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateSignatureRequestSigner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSignatureRequestSigner) GetPin() string {
	if x != nil {
		return x.Pin
	}
	return ""
}

func (x *CreateSignatureRequestSigner) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CreateSignatureRequestSigner) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type CreateSignatureRequestCustomFields struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@inject_tag: json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	//@inject_tag: json:"value"
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	//@inject_tag: json:"required"
	Required bool `protobuf:"varint,3,opt,name=required,proto3" json:"required"`
	//@inject_tag: json:"editor"
	Editor string `protobuf:"bytes,4,opt,name=editor,proto3" json:"editor"`
}

func (x *CreateSignatureRequestCustomFields) Reset() {
	*x = CreateSignatureRequestCustomFields{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureRequestCustomFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureRequestCustomFields) ProtoMessage() {}

func (x *CreateSignatureRequestCustomFields) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureRequestCustomFields.ProtoReflect.Descriptor instead.
func (*CreateSignatureRequestCustomFields) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSignatureRequestCustomFields) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSignatureRequestCustomFields) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CreateSignatureRequestCustomFields) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *CreateSignatureRequestCustomFields) GetEditor() string {
	if x != nil {
		return x.Editor
	}
	return ""
}

type CreateSignatureRequestCcs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailAddress string `protobuf:"bytes,1,opt,name=email_address,json=emailAddress,proto3" json:"email_address,omitempty"`
	RoleName     string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
}

func (x *CreateSignatureRequestCcs) Reset() {
	*x = CreateSignatureRequestCcs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureRequestCcs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureRequestCcs) ProtoMessage() {}

func (x *CreateSignatureRequestCcs) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureRequestCcs.ProtoReflect.Descriptor instead.
func (*CreateSignatureRequestCcs) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{3}
}

func (x *CreateSignatureRequestCcs) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *CreateSignatureRequestCcs) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type CreateSignatureRequestSigningOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Draw    bool   `protobuf:"varint,1,opt,name=draw,proto3" json:"draw,omitempty"`
	Type    bool   `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Upload  bool   `protobuf:"varint,3,opt,name=upload,proto3" json:"upload,omitempty"`
	Phone   bool   `protobuf:"varint,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Default string `protobuf:"bytes,5,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *CreateSignatureRequestSigningOptions) Reset() {
	*x = CreateSignatureRequestSigningOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureRequestSigningOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureRequestSigningOptions) ProtoMessage() {}

func (x *CreateSignatureRequestSigningOptions) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureRequestSigningOptions.ProtoReflect.Descriptor instead.
func (*CreateSignatureRequestSigningOptions) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{4}
}

func (x *CreateSignatureRequestSigningOptions) GetDraw() bool {
	if x != nil {
		return x.Draw
	}
	return false
}

func (x *CreateSignatureRequestSigningOptions) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

func (x *CreateSignatureRequestSigningOptions) GetUpload() bool {
	if x != nil {
		return x.Upload
	}
	return false
}

func (x *CreateSignatureRequestSigningOptions) GetPhone() bool {
	if x != nil {
		return x.Phone
	}
	return false
}

func (x *CreateSignatureRequestSigningOptions) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

type CreateSignatureRequestFileUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Storage string `protobuf:"bytes,2,opt,name=storage,proto3" json:"storage,omitempty"`
}

func (x *CreateSignatureRequestFileUrl) Reset() {
	*x = CreateSignatureRequestFileUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureRequestFileUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureRequestFileUrl) ProtoMessage() {}

func (x *CreateSignatureRequestFileUrl) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureRequestFileUrl.ProtoReflect.Descriptor instead.
func (*CreateSignatureRequestFileUrl) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSignatureRequestFileUrl) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateSignatureRequestFileUrl) GetStorage() string {
	if x != nil {
		return x.Storage
	}
	return ""
}

type CreateSignatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TemplateId string                          `protobuf:"bytes,1,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	Title      string                          `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Subject    string                          `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Message    string                          `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Signers    []*CreateSignatureRequestSigner `protobuf:"bytes,5,rep,name=signers,proto3" json:"signers,omitempty"`
	//@inject_tag: json:"custom_fields"
	CustomFields       []*CreateSignatureRequestCustomFields `protobuf:"bytes,6,rep,name=custom_fields,json=customFields,proto3" json:"custom_fields"`
	AllowDecline       int32                                 `protobuf:"varint,7,opt,name=allow_decline,json=allowDecline,proto3" json:"allow_decline,omitempty"`
	SigningRedirectUrl string                                `protobuf:"bytes,8,opt,name=signing_redirect_url,json=signingRedirectUrl,proto3" json:"signing_redirect_url,omitempty"`
	Ccs                []*CreateSignatureRequestCcs          `protobuf:"bytes,9,rep,name=ccs,proto3" json:"ccs,omitempty"`
	Metadata           map[string]string                     `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClientId           string                                `protobuf:"bytes,11,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	FileUrl            []*CreateSignatureRequestFileUrl      `protobuf:"bytes,12,rep,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	SigningOptions     *CreateSignatureRequestSigningOptions `protobuf:"bytes,13,opt,name=signing_options,json=signingOptions,proto3" json:"signing_options,omitempty"`
	RequestType        string                                `protobuf:"bytes,14,opt,name=request_type,json=requestType,proto3" json:"request_type,omitempty"`
}

func (x *CreateSignatureRequest) Reset() {
	*x = CreateSignatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureRequest) ProtoMessage() {}

func (x *CreateSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureRequest.ProtoReflect.Descriptor instead.
func (*CreateSignatureRequest) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{6}
}

func (x *CreateSignatureRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *CreateSignatureRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSignatureRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CreateSignatureRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateSignatureRequest) GetSigners() []*CreateSignatureRequestSigner {
	if x != nil {
		return x.Signers
	}
	return nil
}

func (x *CreateSignatureRequest) GetCustomFields() []*CreateSignatureRequestCustomFields {
	if x != nil {
		return x.CustomFields
	}
	return nil
}

func (x *CreateSignatureRequest) GetAllowDecline() int32 {
	if x != nil {
		return x.AllowDecline
	}
	return 0
}

func (x *CreateSignatureRequest) GetSigningRedirectUrl() string {
	if x != nil {
		return x.SigningRedirectUrl
	}
	return ""
}

func (x *CreateSignatureRequest) GetCcs() []*CreateSignatureRequestCcs {
	if x != nil {
		return x.Ccs
	}
	return nil
}

func (x *CreateSignatureRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateSignatureRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *CreateSignatureRequest) GetFileUrl() []*CreateSignatureRequestFileUrl {
	if x != nil {
		return x.FileUrl
	}
	return nil
}

func (x *CreateSignatureRequest) GetSigningOptions() *CreateSignatureRequestSigningOptions {
	if x != nil {
		return x.SigningOptions
	}
	return nil
}

func (x *CreateSignatureRequest) GetRequestType() string {
	if x != nil {
		return x.RequestType
	}
	return ""
}

type CreateSignatureResponseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetailsUrl          string `protobuf:"bytes,1,opt,name=details_url,json=detailsUrl,proto3" json:"details_url,omitempty"`
	FilesUrl            string `protobuf:"bytes,2,opt,name=files_url,json=filesUrl,proto3" json:"files_url,omitempty"`
	SignatureRequestId  string `protobuf:"bytes,3,opt,name=signature_request_id,json=signatureRequestId,proto3" json:"signature_request_id,omitempty"`
	MerchantSignatureId string `protobuf:"bytes,4,opt,name=merchant_signature_id,json=merchantSignatureId,proto3" json:"merchant_signature_id,omitempty"`
	PsSignatureId       string `protobuf:"bytes,5,opt,name=ps_signature_id,json=psSignatureId,proto3" json:"ps_signature_id,omitempty"`
}

func (x *CreateSignatureResponseItem) Reset() {
	*x = CreateSignatureResponseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureResponseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureResponseItem) ProtoMessage() {}

func (x *CreateSignatureResponseItem) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureResponseItem.ProtoReflect.Descriptor instead.
func (*CreateSignatureResponseItem) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{7}
}

func (x *CreateSignatureResponseItem) GetDetailsUrl() string {
	if x != nil {
		return x.DetailsUrl
	}
	return ""
}

func (x *CreateSignatureResponseItem) GetFilesUrl() string {
	if x != nil {
		return x.FilesUrl
	}
	return ""
}

func (x *CreateSignatureResponseItem) GetSignatureRequestId() string {
	if x != nil {
		return x.SignatureRequestId
	}
	return ""
}

func (x *CreateSignatureResponseItem) GetMerchantSignatureId() string {
	if x != nil {
		return x.MerchantSignatureId
	}
	return ""
}

func (x *CreateSignatureResponseItem) GetPsSignatureId() string {
	if x != nil {
		return x.PsSignatureId
	}
	return ""
}

type CreateSignatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                        `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message *ResponseErrorMessage        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Item    *CreateSignatureResponseItem `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *CreateSignatureResponse) Reset() {
	*x = CreateSignatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSignatureResponse) ProtoMessage() {}

func (x *CreateSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSignatureResponse.ProtoReflect.Descriptor instead.
func (*CreateSignatureResponse) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{8}
}

func (x *CreateSignatureResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateSignatureResponse) GetMessage() *ResponseErrorMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *CreateSignatureResponse) GetItem() *CreateSignatureResponseItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type GetSignatureUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignatureId string `protobuf:"bytes,1,opt,name=signature_id,json=signatureId,proto3" json:"signature_id,omitempty"`
}

func (x *GetSignatureUrlRequest) Reset() {
	*x = GetSignatureUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignatureUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignatureUrlRequest) ProtoMessage() {}

func (x *GetSignatureUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignatureUrlRequest.ProtoReflect.Descriptor instead.
func (*GetSignatureUrlRequest) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{9}
}

func (x *GetSignatureUrlRequest) GetSignatureId() string {
	if x != nil {
		return x.SignatureId
	}
	return ""
}

type GetSignatureUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  int32                            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Message *ResponseErrorMessage            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Item    *GetSignatureUrlResponseEmbedded `protobuf:"bytes,3,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *GetSignatureUrlResponse) Reset() {
	*x = GetSignatureUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignatureUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignatureUrlResponse) ProtoMessage() {}

func (x *GetSignatureUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignatureUrlResponse.ProtoReflect.Descriptor instead.
func (*GetSignatureUrlResponse) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{10}
}

func (x *GetSignatureUrlResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetSignatureUrlResponse) GetMessage() *ResponseErrorMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *GetSignatureUrlResponse) GetItem() *GetSignatureUrlResponseEmbedded {
	if x != nil {
		return x.Item
	}
	return nil
}

type GetSignUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Embedded *GetSignUrlResponseEmbedded `protobuf:"bytes,1,opt,name=embedded,proto3" json:"embedded,omitempty"`
}

func (x *GetSignUrlResponse) Reset() {
	*x = GetSignUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignUrlResponse) ProtoMessage() {}

func (x *GetSignUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignUrlResponse.ProtoReflect.Descriptor instead.
func (*GetSignUrlResponse) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{11}
}

func (x *GetSignUrlResponse) GetEmbedded() *GetSignUrlResponseEmbedded {
	if x != nil {
		return x.Embedded
	}
	return nil
}

type GetSignUrlResponseEmbedded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignUrl   string `protobuf:"bytes,1,opt,name=sign_url,json=signUrl,proto3" json:"sign_url,omitempty"`
	ExpiresAt int64  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *GetSignUrlResponseEmbedded) Reset() {
	*x = GetSignUrlResponseEmbedded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignUrlResponseEmbedded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignUrlResponseEmbedded) ProtoMessage() {}

func (x *GetSignUrlResponseEmbedded) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignUrlResponseEmbedded.ProtoReflect.Descriptor instead.
func (*GetSignUrlResponseEmbedded) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{12}
}

func (x *GetSignUrlResponseEmbedded) GetSignUrl() string {
	if x != nil {
		return x.SignUrl
	}
	return ""
}

func (x *GetSignUrlResponseEmbedded) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type GetSignatureUrlResponseEmbedded struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignUrl   string               `protobuf:"bytes,1,opt,name=sign_url,json=signUrl,proto3" json:"sign_url,omitempty"`
	ExpiresAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *GetSignatureUrlResponseEmbedded) Reset() {
	*x = GetSignatureUrlResponseEmbedded{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSignatureUrlResponseEmbedded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignatureUrlResponseEmbedded) ProtoMessage() {}

func (x *GetSignatureUrlResponseEmbedded) ProtoReflect() protoreflect.Message {
	mi := &file_signer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignatureUrlResponseEmbedded.ProtoReflect.Descriptor instead.
func (*GetSignatureUrlResponseEmbedded) Descriptor() ([]byte, []int) {
	return file_signer_proto_rawDescGZIP(), []int{13}
}

func (x *GetSignatureUrlResponseEmbedded) GetSignUrl() string {
	if x != nil {
		return x.SignUrl
	}
	return ""
}

func (x *GetSignatureUrlResponseEmbedded) GetExpiresAt() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

var File_signer_proto protoreflect.FileDescriptor

var file_signer_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5e, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x22, 0x8d, 0x01, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x82, 0x01, 0x0a, 0x22, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x22, 0x5d, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x63, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x24, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x72, 0x61, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x72, 0x61,
	0x77, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x4d, 0x0a,
	0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x22, 0xb6, 0x06, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x52, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x58, 0x0a, 0x0d, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x64,
	0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x3c, 0x0a, 0x03,
	0x63, 0x63, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x43, 0x63, 0x73, 0x52, 0x03, 0x63, 0x63, 0x73, 0x12, 0x51, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x49, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x5e, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x67, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe9, 0x01, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e,
	0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x73, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x64, 0x22, 0xb4, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x3b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x49, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x44, 0x0a, 0x04, 0x69, 0x74,
	0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x22, 0x5d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x65, 0x64, 0x52, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x22,
	0x56, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x77, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69,
	0x67, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69,
	0x67, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x32, 0xe7, 0x01, 0x0a, 0x15, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x66, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x27, 0x2e,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x66, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x27, 0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28,
	0x2e, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x3b,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_signer_proto_rawDescOnce sync.Once
	file_signer_proto_rawDescData = file_signer_proto_rawDesc
)

func file_signer_proto_rawDescGZIP() []byte {
	file_signer_proto_rawDescOnce.Do(func() {
		file_signer_proto_rawDescData = protoimpl.X.CompressGZIP(file_signer_proto_rawDescData)
	})
	return file_signer_proto_rawDescData
}

var file_signer_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_signer_proto_goTypes = []interface{}{
	(*ResponseErrorMessage)(nil),                 // 0: document_signer.ResponseErrorMessage
	(*CreateSignatureRequestSigner)(nil),         // 1: document_signer.CreateSignatureRequestSigner
	(*CreateSignatureRequestCustomFields)(nil),   // 2: document_signer.CreateSignatureRequestCustomFields
	(*CreateSignatureRequestCcs)(nil),            // 3: document_signer.CreateSignatureRequestCcs
	(*CreateSignatureRequestSigningOptions)(nil), // 4: document_signer.CreateSignatureRequestSigningOptions
	(*CreateSignatureRequestFileUrl)(nil),        // 5: document_signer.CreateSignatureRequestFileUrl
	(*CreateSignatureRequest)(nil),               // 6: document_signer.CreateSignatureRequest
	(*CreateSignatureResponseItem)(nil),          // 7: document_signer.CreateSignatureResponseItem
	(*CreateSignatureResponse)(nil),              // 8: document_signer.CreateSignatureResponse
	(*GetSignatureUrlRequest)(nil),               // 9: document_signer.GetSignatureUrlRequest
	(*GetSignatureUrlResponse)(nil),              // 10: document_signer.GetSignatureUrlResponse
	(*GetSignUrlResponse)(nil),                   // 11: document_signer.GetSignUrlResponse
	(*GetSignUrlResponseEmbedded)(nil),           // 12: document_signer.GetSignUrlResponseEmbedded
	(*GetSignatureUrlResponseEmbedded)(nil),      // 13: document_signer.GetSignatureUrlResponseEmbedded
	nil,                                          // 14: document_signer.CreateSignatureRequest.MetadataEntry
	(*timestamp.Timestamp)(nil),                  // 15: google.protobuf.Timestamp
}
var file_signer_proto_depIdxs = []int32{
	1,  // 0: document_signer.CreateSignatureRequest.signers:type_name -> document_signer.CreateSignatureRequestSigner
	2,  // 1: document_signer.CreateSignatureRequest.custom_fields:type_name -> document_signer.CreateSignatureRequestCustomFields
	3,  // 2: document_signer.CreateSignatureRequest.ccs:type_name -> document_signer.CreateSignatureRequestCcs
	14, // 3: document_signer.CreateSignatureRequest.metadata:type_name -> document_signer.CreateSignatureRequest.MetadataEntry
	5,  // 4: document_signer.CreateSignatureRequest.file_url:type_name -> document_signer.CreateSignatureRequestFileUrl
	4,  // 5: document_signer.CreateSignatureRequest.signing_options:type_name -> document_signer.CreateSignatureRequestSigningOptions
	0,  // 6: document_signer.CreateSignatureResponse.message:type_name -> document_signer.ResponseErrorMessage
	7,  // 7: document_signer.CreateSignatureResponse.item:type_name -> document_signer.CreateSignatureResponseItem
	0,  // 8: document_signer.GetSignatureUrlResponse.message:type_name -> document_signer.ResponseErrorMessage
	13, // 9: document_signer.GetSignatureUrlResponse.item:type_name -> document_signer.GetSignatureUrlResponseEmbedded
	12, // 10: document_signer.GetSignUrlResponse.embedded:type_name -> document_signer.GetSignUrlResponseEmbedded
	15, // 11: document_signer.GetSignatureUrlResponseEmbedded.expires_at:type_name -> google.protobuf.Timestamp
	6,  // 12: document_signer.DocumentSignerService.CreateSignature:input_type -> document_signer.CreateSignatureRequest
	9,  // 13: document_signer.DocumentSignerService.GetSignatureUrl:input_type -> document_signer.GetSignatureUrlRequest
	8,  // 14: document_signer.DocumentSignerService.CreateSignature:output_type -> document_signer.CreateSignatureResponse
	10, // 15: document_signer.DocumentSignerService.GetSignatureUrl:output_type -> document_signer.GetSignatureUrlResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_signer_proto_init() }
func file_signer_proto_init() {
	if File_signer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_signer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureRequestSigner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureRequestCustomFields); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureRequestCcs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureRequestSigningOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureRequestFileUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureResponseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSignatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignatureUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignatureUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignUrlResponseEmbedded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSignatureUrlResponseEmbedded); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_signer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_signer_proto_goTypes,
		DependencyIndexes: file_signer_proto_depIdxs,
		MessageInfos:      file_signer_proto_msgTypes,
	}.Build()
	File_signer_proto = out.File
	file_signer_proto_rawDesc = nil
	file_signer_proto_goTypes = nil
	file_signer_proto_depIdxs = nil
}
