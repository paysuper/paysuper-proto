// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.7.1
// source: xsolla.proto

package recurringpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type XSollaUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Ip      string `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Phone   string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email   string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Name    string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Country string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
}

func (x *XSollaUser) Reset() {
	*x = XSollaUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaUser) ProtoMessage() {}

func (x *XSollaUser) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaUser.ProtoReflect.Descriptor instead.
func (*XSollaUser) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{0}
}

func (x *XSollaUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *XSollaUser) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *XSollaUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *XSollaUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *XSollaUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XSollaUser) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type XSollaVirtualCurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sku      string  `protobuf:"bytes,2,opt,name=sku,proto3" json:"sku,omitempty"`
	Quantity int32   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Currency string  `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaVirtualCurrency) Reset() {
	*x = XSollaVirtualCurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaVirtualCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaVirtualCurrency) ProtoMessage() {}

func (x *XSollaVirtualCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaVirtualCurrency.ProtoReflect.Descriptor instead.
func (*XSollaVirtualCurrency) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{1}
}

func (x *XSollaVirtualCurrency) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *XSollaVirtualCurrency) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *XSollaVirtualCurrency) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *XSollaVirtualCurrency) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *XSollaVirtualCurrency) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaPurchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualCurrency *XSollaVirtualCurrency `protobuf:"bytes,1,opt,name=virtual_currency,json=virtualCurrency,proto3" json:"virtual_currency,omitempty"`
	Checkout        *XSollaCheckout        `protobuf:"bytes,2,opt,name=checkout,proto3" json:"checkout,omitempty"`
	VirtualItems    *XSollaVirtualItems    `protobuf:"bytes,3,opt,name=virtual_items,json=virtualItems,proto3" json:"virtual_items,omitempty"`
	Total           *XSollaTotal           `protobuf:"bytes,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *XSollaPurchase) Reset() {
	*x = XSollaPurchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaPurchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaPurchase) ProtoMessage() {}

func (x *XSollaPurchase) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaPurchase.ProtoReflect.Descriptor instead.
func (*XSollaPurchase) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{2}
}

func (x *XSollaPurchase) GetVirtualCurrency() *XSollaVirtualCurrency {
	if x != nil {
		return x.VirtualCurrency
	}
	return nil
}

func (x *XSollaPurchase) GetCheckout() *XSollaCheckout {
	if x != nil {
		return x.Checkout
	}
	return nil
}

func (x *XSollaPurchase) GetVirtualItems() *XSollaVirtualItems {
	if x != nil {
		return x.VirtualItems
	}
	return nil
}

func (x *XSollaPurchase) GetTotal() *XSollaTotal {
	if x != nil {
		return x.Total
	}
	return nil
}

type XSollaCheckout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaCheckout) Reset() {
	*x = XSollaCheckout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaCheckout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaCheckout) ProtoMessage() {}

func (x *XSollaCheckout) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaCheckout.ProtoReflect.Descriptor instead.
func (*XSollaCheckout) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{3}
}

func (x *XSollaCheckout) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *XSollaCheckout) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sku    string  `protobuf:"bytes,1,opt,name=sku,proto3" json:"sku,omitempty"`
	Amount float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaItem) Reset() {
	*x = XSollaItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaItem) ProtoMessage() {}

func (x *XSollaItem) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaItem.ProtoReflect.Descriptor instead.
func (*XSollaItem) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{4}
}

func (x *XSollaItem) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *XSollaItem) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaVirtualItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*XSollaItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Currency string        `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64       `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaVirtualItems) Reset() {
	*x = XSollaVirtualItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaVirtualItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaVirtualItems) ProtoMessage() {}

func (x *XSollaVirtualItems) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaVirtualItems.ProtoReflect.Descriptor instead.
func (*XSollaVirtualItems) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{5}
}

func (x *XSollaVirtualItems) GetItems() []*XSollaItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *XSollaVirtualItems) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *XSollaVirtualItems) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaTotal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaTotal) Reset() {
	*x = XSollaTotal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaTotal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaTotal) ProtoMessage() {}

func (x *XSollaTotal) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaTotal.ProtoReflect.Descriptor instead.
func (*XSollaTotal) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{6}
}

func (x *XSollaTotal) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *XSollaTotal) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaCheckNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationType string      `protobuf:"bytes,1,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	User             *XSollaUser `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *XSollaCheckNotification) Reset() {
	*x = XSollaCheckNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaCheckNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaCheckNotification) ProtoMessage() {}

func (x *XSollaCheckNotification) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaCheckNotification.ProtoReflect.Descriptor instead.
func (*XSollaCheckNotification) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{7}
}

func (x *XSollaCheckNotification) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *XSollaCheckNotification) GetUser() *XSollaUser {
	if x != nil {
		return x.User
	}
	return nil
}

type XSollaTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExternalId    string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	PaymentDate   string `protobuf:"bytes,3,opt,name=payment_date,json=paymentDate,proto3" json:"payment_date,omitempty"`
	PaymentMethod string `protobuf:"bytes,4,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	DryRun        int32  `protobuf:"varint,5,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
}

func (x *XSollaTransaction) Reset() {
	*x = XSollaTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaTransaction) ProtoMessage() {}

func (x *XSollaTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaTransaction.ProtoReflect.Descriptor instead.
func (*XSollaTransaction) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{8}
}

func (x *XSollaTransaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *XSollaTransaction) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *XSollaTransaction) GetPaymentDate() string {
	if x != nil {
		return x.PaymentDate
	}
	return ""
}

func (x *XSollaTransaction) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *XSollaTransaction) GetDryRun() int32 {
	if x != nil {
		return x.DryRun
	}
	return 0
}

type XSollaPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaPayment) Reset() {
	*x = XSollaPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaPayment) ProtoMessage() {}

func (x *XSollaPayment) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaPayment.ProtoReflect.Descriptor instead.
func (*XSollaPayment) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{9}
}

func (x *XSollaPayment) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *XSollaPayment) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaVat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaVat) Reset() {
	*x = XSollaVat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaVat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaVat) ProtoMessage() {}

func (x *XSollaVat) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaVat.ProtoReflect.Descriptor instead.
func (*XSollaVat) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{10}
}

func (x *XSollaVat) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *XSollaVat) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaPayout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaPayout) Reset() {
	*x = XSollaPayout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaPayout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaPayout) ProtoMessage() {}

func (x *XSollaPayout) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaPayout.ProtoReflect.Descriptor instead.
func (*XSollaPayout) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{11}
}

func (x *XSollaPayout) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *XSollaPayout) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaXsollaFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaXsollaFee) Reset() {
	*x = XSollaXsollaFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaXsollaFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaXsollaFee) ProtoMessage() {}

func (x *XSollaXsollaFee) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaXsollaFee.ProtoReflect.Descriptor instead.
func (*XSollaXsollaFee) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{12}
}

func (x *XSollaXsollaFee) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *XSollaXsollaFee) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaPaymentMethodFee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaPaymentMethodFee) Reset() {
	*x = XSollaPaymentMethodFee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaPaymentMethodFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaPaymentMethodFee) ProtoMessage() {}

func (x *XSollaPaymentMethodFee) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaPaymentMethodFee.ProtoReflect.Descriptor instead.
func (*XSollaPaymentMethodFee) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{13}
}

func (x *XSollaPaymentMethodFee) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *XSollaPaymentMethodFee) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaRepatriationCommission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string  `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Amount   float64 `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *XSollaRepatriationCommission) Reset() {
	*x = XSollaRepatriationCommission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaRepatriationCommission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaRepatriationCommission) ProtoMessage() {}

func (x *XSollaRepatriationCommission) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaRepatriationCommission.ProtoReflect.Descriptor instead.
func (*XSollaRepatriationCommission) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{14}
}

func (x *XSollaRepatriationCommission) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *XSollaRepatriationCommission) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type XSollaPaymentDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment                *XSollaPayment                `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
	Vat                    *XSollaVat                    `protobuf:"bytes,2,opt,name=vat,proto3" json:"vat,omitempty"`
	PayoutCurrencyRate     float64                       `protobuf:"fixed64,3,opt,name=payout_currency_rate,json=payoutCurrencyRate,proto3" json:"payout_currency_rate,omitempty"`
	Payout                 *XSollaPayout                 `protobuf:"bytes,4,opt,name=payout,proto3" json:"payout,omitempty"`
	XsollaFee              *XSollaXsollaFee              `protobuf:"bytes,5,opt,name=xsolla_fee,json=xsollaFee,proto3" json:"xsolla_fee,omitempty"`
	PaymentMethodFee       *XSollaPaymentMethodFee       `protobuf:"bytes,6,opt,name=payment_method_fee,json=paymentMethodFee,proto3" json:"payment_method_fee,omitempty"`
	RepatriationCommission *XSollaRepatriationCommission `protobuf:"bytes,7,opt,name=repatriation_commission,json=repatriationCommission,proto3" json:"repatriation_commission,omitempty"`
}

func (x *XSollaPaymentDetails) Reset() {
	*x = XSollaPaymentDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaPaymentDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaPaymentDetails) ProtoMessage() {}

func (x *XSollaPaymentDetails) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaPaymentDetails.ProtoReflect.Descriptor instead.
func (*XSollaPaymentDetails) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{15}
}

func (x *XSollaPaymentDetails) GetPayment() *XSollaPayment {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *XSollaPaymentDetails) GetVat() *XSollaVat {
	if x != nil {
		return x.Vat
	}
	return nil
}

func (x *XSollaPaymentDetails) GetPayoutCurrencyRate() float64 {
	if x != nil {
		return x.PayoutCurrencyRate
	}
	return 0
}

func (x *XSollaPaymentDetails) GetPayout() *XSollaPayout {
	if x != nil {
		return x.Payout
	}
	return nil
}

func (x *XSollaPaymentDetails) GetXsollaFee() *XSollaXsollaFee {
	if x != nil {
		return x.XsollaFee
	}
	return nil
}

func (x *XSollaPaymentDetails) GetPaymentMethodFee() *XSollaPaymentMethodFee {
	if x != nil {
		return x.PaymentMethodFee
	}
	return nil
}

func (x *XSollaPaymentDetails) GetRepatriationCommission() *XSollaRepatriationCommission {
	if x != nil {
		return x.RepatriationCommission
	}
	return nil
}

type XSollaPaymentNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NotificationType string                `protobuf:"bytes,1,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`
	Purchase         *XSollaPurchase       `protobuf:"bytes,2,opt,name=purchase,proto3" json:"purchase,omitempty"`
	User             *XSollaUser           `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Transaction      *XSollaTransaction    `protobuf:"bytes,4,opt,name=transaction,proto3" json:"transaction,omitempty"`
	PaymentDetails   *XSollaPaymentDetails `protobuf:"bytes,5,opt,name=payment_details,json=paymentDetails,proto3" json:"payment_details,omitempty"`
	CustomParameters map[string]string     `protobuf:"bytes,6,rep,name=custom_parameters,json=customParameters,proto3" json:"custom_parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *XSollaPaymentNotification) Reset() {
	*x = XSollaPaymentNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_xsolla_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *XSollaPaymentNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XSollaPaymentNotification) ProtoMessage() {}

func (x *XSollaPaymentNotification) ProtoReflect() protoreflect.Message {
	mi := &file_xsolla_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XSollaPaymentNotification.ProtoReflect.Descriptor instead.
func (*XSollaPaymentNotification) Descriptor() ([]byte, []int) {
	return file_xsolla_proto_rawDescGZIP(), []int{16}
}

func (x *XSollaPaymentNotification) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *XSollaPaymentNotification) GetPurchase() *XSollaPurchase {
	if x != nil {
		return x.Purchase
	}
	return nil
}

func (x *XSollaPaymentNotification) GetUser() *XSollaUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *XSollaPaymentNotification) GetTransaction() *XSollaTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *XSollaPaymentNotification) GetPaymentDetails() *XSollaPaymentDetails {
	if x != nil {
		return x.PaymentDetails
	}
	return nil
}

func (x *XSollaPaymentNotification) GetCustomParameters() map[string]string {
	if x != nil {
		return x.CustomParameters
	}
	return nil
}

var File_xsolla_proto protoreflect.FileDescriptor

var file_xsolla_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x78, 0x73, 0x6f, 0x6c, 0x6c, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x86, 0x01, 0x0a, 0x0a, 0x58, 0x53, 0x6f, 0x6c, 0x6c,
	0x61, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x22,
	0x8d, 0x01, 0x0a, 0x15, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xfa, 0x01, 0x0a, 0x0e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x12, 0x48, 0x0a, 0x10, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x32, 0x0a, 0x08,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x12, 0x3f, 0x0a, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x52, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x44, 0x0a, 0x0e,
	0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x36, 0x0a, 0x0a, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x6b, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x72, 0x0a, 0x12, 0x58, 0x53,
	0x6f, 0x6c, 0x6c, 0x61, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x41,
	0x0a, 0x0b, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x6e, 0x0a, 0x17, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x22, 0xa7, 0x01, 0x0a, 0x11, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x72, 0x79, 0x5f, 0x72, 0x75, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x22, 0x43, 0x0a, 0x0d, 0x58,
	0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x3f, 0x0a, 0x09, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x56, 0x61, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x42, 0x0a, 0x0c, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x0f, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x58,
	0x73, 0x6f, 0x6c, 0x6c, 0x61, 0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x16,
	0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x46, 0x65, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x52, 0x0a, 0x1c, 0x58, 0x53,
	0x6f, 0x6c, 0x6c, 0x61, 0x52, 0x65, 0x70, 0x61, 0x74, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb1,
	0x03, 0x0a, 0x14, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58,
	0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x56, 0x61, 0x74, 0x52, 0x03, 0x76, 0x61, 0x74, 0x12, 0x30, 0x0a,
	0x14, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79,
	0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x70, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x2c, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x06, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x36, 0x0a,
	0x0a, 0x78, 0x73, 0x6f, 0x6c, 0x6c, 0x61, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c,
	0x61, 0x58, 0x73, 0x6f, 0x6c, 0x6c, 0x61, 0x46, 0x65, 0x65, 0x52, 0x09, 0x78, 0x73, 0x6f, 0x6c,
	0x6c, 0x61, 0x46, 0x65, 0x65, 0x12, 0x4c, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c,
	0x61, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x46, 0x65,
	0x65, 0x52, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x46, 0x65, 0x65, 0x12, 0x5d, 0x0a, 0x17, 0x72, 0x65, 0x70, 0x61, 0x74, 0x72, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53,
	0x6f, 0x6c, 0x6c, 0x61, 0x52, 0x65, 0x70, 0x61, 0x74, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x16, 0x72, 0x65, 0x70, 0x61,
	0x74, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xd3, 0x03, 0x0a, 0x19, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2b, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a,
	0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x26, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x64, 0x0a,
	0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x58, 0x53, 0x6f, 0x6c, 0x6c, 0x61, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x10, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x1a, 0x43, 0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x3b, 0x72,
	0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_xsolla_proto_rawDescOnce sync.Once
	file_xsolla_proto_rawDescData = file_xsolla_proto_rawDesc
)

func file_xsolla_proto_rawDescGZIP() []byte {
	file_xsolla_proto_rawDescOnce.Do(func() {
		file_xsolla_proto_rawDescData = protoimpl.X.CompressGZIP(file_xsolla_proto_rawDescData)
	})
	return file_xsolla_proto_rawDescData
}

var file_xsolla_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_xsolla_proto_goTypes = []interface{}{
	(*XSollaUser)(nil),                   // 0: entity.XSollaUser
	(*XSollaVirtualCurrency)(nil),        // 1: entity.XSollaVirtualCurrency
	(*XSollaPurchase)(nil),               // 2: entity.XSollaPurchase
	(*XSollaCheckout)(nil),               // 3: entity.XSollaCheckout
	(*XSollaItem)(nil),                   // 4: entity.XSollaItem
	(*XSollaVirtualItems)(nil),           // 5: entity.XSollaVirtualItems
	(*XSollaTotal)(nil),                  // 6: entity.XSollaTotal
	(*XSollaCheckNotification)(nil),      // 7: entity.XSollaCheckNotification
	(*XSollaTransaction)(nil),            // 8: entity.XSollaTransaction
	(*XSollaPayment)(nil),                // 9: entity.XSollaPayment
	(*XSollaVat)(nil),                    // 10: entity.XSollaVat
	(*XSollaPayout)(nil),                 // 11: entity.XSollaPayout
	(*XSollaXsollaFee)(nil),              // 12: entity.XSollaXsollaFee
	(*XSollaPaymentMethodFee)(nil),       // 13: entity.XSollaPaymentMethodFee
	(*XSollaRepatriationCommission)(nil), // 14: entity.XSollaRepatriationCommission
	(*XSollaPaymentDetails)(nil),         // 15: entity.XSollaPaymentDetails
	(*XSollaPaymentNotification)(nil),    // 16: entity.XSollaPaymentNotification
	nil,                                  // 17: entity.XSollaPaymentNotification.CustomParametersEntry
}
var file_xsolla_proto_depIdxs = []int32{
	1,  // 0: entity.XSollaPurchase.virtual_currency:type_name -> entity.XSollaVirtualCurrency
	3,  // 1: entity.XSollaPurchase.checkout:type_name -> entity.XSollaCheckout
	5,  // 2: entity.XSollaPurchase.virtual_items:type_name -> entity.XSollaVirtualItems
	6,  // 3: entity.XSollaPurchase.total:type_name -> entity.XSollaTotal
	4,  // 4: entity.XSollaVirtualItems.items:type_name -> entity.XSollaItem
	0,  // 5: entity.XSollaCheckNotification.user:type_name -> entity.XSollaUser
	9,  // 6: entity.XSollaPaymentDetails.payment:type_name -> entity.XSollaPayment
	10, // 7: entity.XSollaPaymentDetails.vat:type_name -> entity.XSollaVat
	11, // 8: entity.XSollaPaymentDetails.payout:type_name -> entity.XSollaPayout
	12, // 9: entity.XSollaPaymentDetails.xsolla_fee:type_name -> entity.XSollaXsollaFee
	13, // 10: entity.XSollaPaymentDetails.payment_method_fee:type_name -> entity.XSollaPaymentMethodFee
	14, // 11: entity.XSollaPaymentDetails.repatriation_commission:type_name -> entity.XSollaRepatriationCommission
	2,  // 12: entity.XSollaPaymentNotification.purchase:type_name -> entity.XSollaPurchase
	0,  // 13: entity.XSollaPaymentNotification.user:type_name -> entity.XSollaUser
	8,  // 14: entity.XSollaPaymentNotification.transaction:type_name -> entity.XSollaTransaction
	15, // 15: entity.XSollaPaymentNotification.payment_details:type_name -> entity.XSollaPaymentDetails
	17, // 16: entity.XSollaPaymentNotification.custom_parameters:type_name -> entity.XSollaPaymentNotification.CustomParametersEntry
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_xsolla_proto_init() }
func file_xsolla_proto_init() {
	if File_xsolla_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_xsolla_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaVirtualCurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaPurchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaCheckout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaVirtualItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaTotal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaCheckNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaVat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaPayout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaXsollaFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaPaymentMethodFee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaRepatriationCommission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaPaymentDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_xsolla_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*XSollaPaymentNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_xsolla_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_xsolla_proto_goTypes,
		DependencyIndexes: file_xsolla_proto_depIdxs,
		MessageInfos:      file_xsolla_proto_msgTypes,
	}.Build()
	File_xsolla_proto = out.File
	file_xsolla_proto_rawDesc = nil
	file_xsolla_proto_goTypes = nil
	file_xsolla_proto_depIdxs = nil
}
