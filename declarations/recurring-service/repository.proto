syntax = "proto3";

option go_package = ".;recurringpb";

import "entity.proto";
import "google/protobuf/timestamp.proto";

package repository;

service Repository {
  rpc InsertSavedCard(SavedCardRequest) returns (Result) {}
  rpc DeleteSavedCard(DeleteSavedCardRequest) returns (DeleteSavedCardResponse) {}
  rpc FindSavedCards(SavedCardRequest) returns (SavedCardList) {}
  rpc FindSavedCardById(FindByStringValue) returns (entity.SavedCard) {}
  rpc AddSubscription(entity.Subscription) returns (AddSubscriptionResponse) {}
  rpc UpdateSubscription(entity.Subscription) returns (UpdateSubscriptionResponse) {}
  rpc GetSubscription(GetSubscriptionRequest) returns (GetSubscriptionResponse) {}
  rpc FindSubscriptions(FindSubscriptionsRequest) returns (FindSubscriptionsResponse) {}
  rpc DeleteSubscription(entity.Subscription) returns (DeleteSubscriptionResponse) {}

  rpc GetMerchantSubscriptions(GetMerchantSubscriptionsRequest) returns (GetMerchantSubscriptionsResponse) {}
}

message Result {}

message FindByStringValue {
  string value = 1;
}
message SavedCardRequest {
  string token = 1;
  string project_id = 2;
  string merchant_id = 3;
  string masked_pan = 4;
  string card_holder = 5;
  string recurring_id = 6;
  entity.CardExpire expire = 7;
}

message SavedCardList {
  repeated entity.SavedCard saved_cards = 1;
}

message DeleteSavedCardRequest {
  string id = 1;
  string token = 2;
}

message DeleteSavedCardResponse {
  int32 status = 1;
  string message = 2;
}

message AddSubscriptionResponse {
  int32 status = 1;
  string message = 2;
  string subscription_id = 3;
}

message UpdateSubscriptionRequest {
  string id = 1;
  bool is_active = 2;
  google.protobuf.Timestamp expire_at = 3;
  google.protobuf.Timestamp last_payment_at = 4;
}

message UpdateSubscriptionResponse {
  int32 status = 1;
  string message = 2;
}

message GetSubscriptionRequest {
  string id = 1;
}

message GetSubscriptionResponse {
  entity.Subscription subscription = 1;
  int32 status = 2;
  string message = 3;
}

message FindSubscriptionsRequest {
  string customer_id = 1;
  string customer_uuid = 2;
  string created_at = 3;
  entity.CustomerInfo customer = 4;
  string masked_pan = 5;
  string quick_filter = 6;
  string merchant_id = 7;
  int32 limit = 8;
  int32 offset = 9;
}

message FindSubscriptionsResponse {
  repeated entity.Subscription list = 1;
}

message DeleteSubscriptionRequest {
  string id = 1;
}

message DeleteSubscriptionResponse {
  int32 status = 1;
  string message = 2;
}

message GetMerchantSubscriptionsRequest {
  string merchant_id = 1;
  string quick_filter = 2;
  int32 limit = 3;
  int32 offset = 4;
}

message GetMerchantSubscriptionsResponse {
  repeated entity.Subscription list = 1;
}